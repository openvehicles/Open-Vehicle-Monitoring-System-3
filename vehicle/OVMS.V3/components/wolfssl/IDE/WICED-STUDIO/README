The wolfSSL examples in the WICED SDK require a server or client application. wolfSSL
provides an easy solution in the <wolfSSL root>/examples/ directory. The wolfSSL 
code repository is located on GitHub at https://github.com/wolfSSL/wolfssl. 
You can download or clone the repository. Run the autogen script and configure 
the library with necessary functionality, see ./configure -h 
for a list of configure options. Finally, run make and make check to ensure the
build was successful. You can install wolfSSL on your system with make
install if you wish. See www.wolfssl.com/docs/wolfssl-manual/ch2/, 'Building
Wolfssl' for more information.

Run ./examples/server/server -h for a list of server options or
./examples/client/client -h for client options. If you would like
to test the server or client, you may run them on localhost. Instructions on
running the client or server can be found in the snip code examples in the
WICED SDK. The snips are meant to be a starting off point for your applications.

Download and install WICED Studio from the Cypress website.

In the <wolfSSL_root>/IDE/WICED-STUDIO/ directory, you will find the library file
user_settings.h which should be copied to <wolfSSL_root>. This is your wolfSSL
configuration file. Please see www.wolfssl.com/docs/ for detailed instructions on
how to use the configure options.

Once you have installed the WICED software:
    1. Create a directory called 'wolfssl_lib' in the BESL directory of WICED
       SDK. The path to the new directory should be:
                43xxx_Wi-Fi/WICED/security/BESL/wolfssl_lib.
    2. Drag and drop the wolfssl library directory into the wolfssl_lib folder
       you just created. The root wolfSSL directory was created when you either
       downloaded or cloned the wolfSSL repository from github.
    3. The user_settings.h file in the IDE/WICED-STUDIO/ directory should be
       placed at <wolfssl_root> added to the WICED project in step #2.. This
       file provides the configure options for compiling wolfSSL with your project.
       The default values will give you a starting point and you may further
       configure the library to meet your needs.
    4. Apply the patch to your WICED IDE project's 43xxx_Wi-Fi/ directory.
            a. Open a terminal and cd into the project 43xxx_Wi-Fi/ directory.:
            b. git apply --ignore-space-change --ignore-whitespace mychanges.patch

You can now build and use the wolfSSL and wolfCrypt snips within the WICED SDK.
Cypress includes great documentation and getting started videos to learn how to
build and run the snips in the Cypress Community section of their website,
https://community.cypress.com/welcome/..

wolfSSL provides a wolfCrypt test application, a TLS client and server application,
and an HTTPS client application. Future development and additions will be made.

Support for TLS 1.3 is available in the provided snippets and it is the most current
TLS version available.

Further instructions and documentation can be found on the wolfSSL website at
www.wolfssl.com or visit us on our forums at www.wolfssl.com/forums/.

